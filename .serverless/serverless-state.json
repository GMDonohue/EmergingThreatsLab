{
  "service": {
    "service": "smishing-archiving-api",
    "serviceObject": {
      "name": "smishing-archiving-api"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "region": "us-west-1",
      "stage": "dev",
      "environment": {
        "DYNAMODB_TABLE_NAME": "EmergingThreatsLabData",
        "S3_BUCKET_NAME": "emerging-threats-image-bucket"
      },
      "apiGateway": {
        "binaryMediaTypes": [
          "multipart/form-data"
        ],
        "apiKeys": [
          "APIPhishingKey"
        ]
      },
      "versionFunctions": true,
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:PutItem",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:Query",
                "s3:PutObject",
                "s3:PutObjectAcl",
                "s3:GetObject",
                "s3:ListBucket"
              ],
              "Resource": [
                "arn:aws:dynamodb:us-west-1:*:table/EmergingThreatsLabData",
                "arn:aws:s3:::emerging-threats-image-bucket",
                "arn:aws:s3:::emerging-threats-image-bucket/*"
              ]
            }
          ]
        }
      },
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "DataExtractionHandlerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/smishing-archiving-api-dev-dataExtractionHandler"
            }
          },
          "UploadHandlerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/smishing-archiving-api-dev-uploadHandler"
            }
          },
          "PrivateUploadHandlerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/smishing-archiving-api-dev-privateUploadHandler"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "smishing-archiving-api",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/smishing-archiving-api-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/smishing-archiving-api-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "smishing-archiving-api",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "DataExtractionHandlerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-west-1-7b881650-2987",
                "S3Key": "serverless/smishing-archiving-api/dev/1740675268194-2025-02-27T16:54:28.194Z/smishing-archiving-api.zip"
              },
              "Handler": "backend/functions/mainHandler.dataExtraction",
              "Runtime": "nodejs18.x",
              "FunctionName": "smishing-archiving-api-dev-dataExtractionHandler",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "DYNAMODB_TABLE_NAME": "EmergingThreatsLabData",
                  "S3_BUCKET_NAME": "emerging-threats-image-bucket"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "DataExtractionHandlerLogGroup"
            ]
          },
          "UploadHandlerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-west-1-7b881650-2987",
                "S3Key": "serverless/smishing-archiving-api/dev/1740675268194-2025-02-27T16:54:28.194Z/smishing-archiving-api.zip"
              },
              "Handler": "backend/functions/publicUploadHandler.uploadImage",
              "Runtime": "nodejs18.x",
              "FunctionName": "smishing-archiving-api-dev-uploadHandler",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "DYNAMODB_TABLE_NAME": "EmergingThreatsLabData",
                  "S3_BUCKET_NAME": "emerging-threats-image-bucket"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "UploadHandlerLogGroup"
            ]
          },
          "PrivateUploadHandlerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-west-1-7b881650-2987",
                "S3Key": "serverless/smishing-archiving-api/dev/1740675268194-2025-02-27T16:54:28.194Z/smishing-archiving-api.zip"
              },
              "Handler": "backend/functions/privateUploadHandler.uploadImage",
              "Runtime": "nodejs18.x",
              "FunctionName": "smishing-archiving-api-dev-privateUploadHandler",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "DYNAMODB_TABLE_NAME": "EmergingThreatsLabData",
                  "S3_BUCKET_NAME": "emerging-threats-image-bucket"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "PrivateUploadHandlerLogGroup"
            ]
          },
          "DataExtractionHandlerLambdaVersion0hrsoTPpYtxqpTArq5TwF2abbdqE9xilF3PkXZA4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DataExtractionHandlerLambdaFunction"
              },
              "CodeSha256": "XNMo56JJJ54vUmzBusL7GUB0xrFWk1bPxc9i72CDPx4="
            }
          },
          "UploadHandlerLambdaVersionXSfCvVgOQlRurzVnh7Z7j26fqLasIf79mjgivmVm1sU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UploadHandlerLambdaFunction"
              },
              "CodeSha256": "XNMo56JJJ54vUmzBusL7GUB0xrFWk1bPxc9i72CDPx4="
            }
          },
          "PrivateUploadHandlerLambdaVersiondGmjb8O6ledKWCq3f5tNQpUXNmIPpHf7NhH1yxXLeg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PrivateUploadHandlerLambdaFunction"
              },
              "CodeSha256": "XNMo56JJJ54vUmzBusL7GUB0xrFWk1bPxc9i72CDPx4="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-smishing-archiving-api",
              "BinaryMediaTypes": [
                "multipart/form-data"
              ],
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceDataextraction": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "dataExtraction",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUpload": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "upload",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePrivateDashupload": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "private-upload",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodDataextractionOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceDataextraction"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodUploadOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceUpload"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodPrivateDashuploadOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourcePrivateDashupload"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodDataextractionPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceDataextraction"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": true,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "DataExtractionHandlerLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "DataExtractionHandlerLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodUploadPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUpload"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": true,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UploadHandlerLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "UploadHandlerLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodPrivateDashuploadPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePrivateDashupload"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PrivateUploadHandlerLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "PrivateUploadHandlerLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1740675258474": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodDataextractionOptions",
              "ApiGatewayMethodUploadOptions",
              "ApiGatewayMethodPrivateDashuploadOptions",
              "ApiGatewayMethodDataextractionPost",
              "ApiGatewayMethodUploadPost",
              "ApiGatewayMethodPrivateDashuploadPost"
            ]
          },
          "ApiGatewayApiKey1": {
            "Type": "AWS::ApiGateway::ApiKey",
            "Properties": {
              "Enabled": true,
              "Name": "APIPhishingKey",
              "StageKeys": [
                {
                  "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "StageName": "dev"
                }
              ]
            },
            "DependsOn": "ApiGatewayDeployment1740675258474"
          },
          "ApiGatewayUsagePlan": {
            "Type": "AWS::ApiGateway::UsagePlan",
            "DependsOn": "ApiGatewayDeployment1740675258474",
            "Properties": {
              "ApiStages": [
                {
                  "ApiId": {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "Stage": "dev"
                }
              ],
              "Description": "Usage plan for smishing-archiving-api dev stage",
              "UsagePlanName": "smishing-archiving-api-dev"
            }
          },
          "ApiGatewayUsagePlanKey1": {
            "Type": "AWS::ApiGateway::UsagePlanKey",
            "Properties": {
              "KeyId": {
                "Ref": "ApiGatewayApiKey1"
              },
              "KeyType": "API_KEY",
              "UsagePlanId": {
                "Ref": "ApiGatewayUsagePlan"
              }
            }
          },
          "DataExtractionHandlerLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DataExtractionHandlerLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UploadHandlerLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UploadHandlerLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PrivateUploadHandlerLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PrivateUploadHandlerLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UploadsS3Bucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "emerging-threats-image-bucket",
              "CorsConfiguration": {
                "CorsRules": [
                  {
                    "AllowedOrigins": [
                      "https://emergingthreats-frontend-bucket.s3.us-west-1.amazonaws.com"
                    ],
                    "AllowedMethods": [
                      "GET",
                      "PUT",
                      "POST"
                    ],
                    "AllowedHeaders": [
                      "*"
                    ]
                  }
                ]
              }
            }
          },
          "UploadsS3BucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": "emerging-threats-image-bucket",
              "PolicyDocument": {
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "AWS": "arn:aws:iam::688567304941:role/smishing-archiving-api-dev-us-west-1-lambdaRole"
                    },
                    "Action": [
                      "s3:PutObject",
                      "s3:GetObject"
                    ],
                    "Resource": "arn:aws:s3:::emerging-threats-image-bucket/*"
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-us-west-1-7b881650-2987",
            "Export": {
              "Name": "sls-smishing-archiving-api-dev-ServerlessDeploymentBucketName"
            }
          },
          "DataExtractionHandlerLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DataExtractionHandlerLambdaVersion0hrsoTPpYtxqpTArq5TwF2abbdqE9xilF3PkXZA4"
            },
            "Export": {
              "Name": "sls-smishing-archiving-api-dev-DataExtractionHandlerLambdaFunctionQualifiedArn"
            }
          },
          "UploadHandlerLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UploadHandlerLambdaVersionXSfCvVgOQlRurzVnh7Z7j26fqLasIf79mjgivmVm1sU"
            },
            "Export": {
              "Name": "sls-smishing-archiving-api-dev-UploadHandlerLambdaFunctionQualifiedArn"
            }
          },
          "PrivateUploadHandlerLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PrivateUploadHandlerLambdaVersiondGmjb8O6ledKWCq3f5tNQpUXNmIPpHf7NhH1yxXLeg"
            },
            "Export": {
              "Name": "sls-smishing-archiving-api-dev-PrivateUploadHandlerLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-smishing-archiving-api-dev-ServiceEndpoint"
            }
          }
        }
      },
      "vpc": {}
    },
    "pluginsData": {},
    "functions": {
      "dataExtractionHandler": {
        "handler": "backend/functions/mainHandler.dataExtraction",
        "events": [
          {
            "http": {
              "path": "dataExtraction",
              "method": "post",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "private": true,
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "smishing-archiving-api-dev-dataExtractionHandler",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "DataExtractionHandlerLambdaVersion0hrsoTPpYtxqpTArq5TwF2abbdqE9xilF3PkXZA4"
      },
      "uploadHandler": {
        "handler": "backend/functions/publicUploadHandler.uploadImage",
        "events": [
          {
            "http": {
              "path": "upload",
              "method": "post",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "private": true,
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "smishing-archiving-api-dev-uploadHandler",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "UploadHandlerLambdaVersionXSfCvVgOQlRurzVnh7Z7j26fqLasIf79mjgivmVm1sU"
      },
      "privateUploadHandler": {
        "handler": "backend/functions/privateUploadHandler.uploadImage",
        "events": [
          {
            "http": {
              "path": "private-upload",
              "method": "post",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "smishing-archiving-api-dev-privateUploadHandler",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "PrivateUploadHandlerLambdaVersiondGmjb8O6ledKWCq3f5tNQpUXNmIPpHf7NhH1yxXLeg"
      }
    },
    "resources": {
      "Resources": {
        "UploadsS3Bucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "BucketName": "emerging-threats-image-bucket",
            "CorsConfiguration": {
              "CorsRules": [
                {
                  "AllowedOrigins": [
                    "https://emergingthreats-frontend-bucket.s3.us-west-1.amazonaws.com"
                  ],
                  "AllowedMethods": [
                    "GET",
                    "PUT",
                    "POST"
                  ],
                  "AllowedHeaders": [
                    "*"
                  ]
                }
              ]
            }
          }
        },
        "UploadsS3BucketPolicy": {
          "Type": "AWS::S3::BucketPolicy",
          "Properties": {
            "Bucket": "emerging-threats-image-bucket",
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "AWS": "arn:aws:iam::688567304941:role/smishing-archiving-api-dev-us-west-1-lambdaRole"
                  },
                  "Action": [
                    "s3:PutObject",
                    "s3:GetObject"
                  ],
                  "Resource": "arn:aws:s3:::emerging-threats-image-bucket/*"
                }
              ]
            }
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless",
    "initialServerlessConfig": {
      "service": "smishing-archiving-api",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "appId": null,
    "orgId": null,
    "layers": {},
    "artifact": "/Users/donohue/CAPSTONE/.serverless/smishing-archiving-api.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/smishing-archiving-api/dev/1740675268194-2025-02-27T16:54:28.194Z",
    "artifact": "smishing-archiving-api.zip"
  }
}