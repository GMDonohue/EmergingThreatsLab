{
  "C:\\Users\\gmd14\\dynamodb-project\\serverless.yml": {
    "versionFramework": "4.7.0",
    "servicePath": "C:\\Users\\gmd14\\dynamodb-project\\serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "smishing-archiving-api",
      "provider": {
        "name": "aws",
        "runtime": "nodejs18.x",
        "region": "us-west-1",
        "stage": "dev",
        "environment": {
          "DYNAMODB_TABLE_NAME": "EmergingThreatsLabData",
          "S3_BUCKET_NAME": "emerging-threats-image-bucket"
        },
        "apiGateway": {
          "binaryMediaTypes": [
            "multipart/form-data"
          ],
          "apiKeys": "<REDACTED>"
        },
        "versionFunctions": true,
        "iam": {
          "role": {
            "statements": [
              {
                "Effect": "Allow",
                "Action": [
                  "dynamodb:PutItem",
                  "dynamodb:GetItem",
                  "dynamodb:Scan",
                  "dynamodb:Query",
                  "s3:PutObject",
                  "s3:PutObjectAcl",
                  "s3:GetObject",
                  "s3:ListBucket"
                ],
                "Resource": [
                  "arn:aws:dynamodb:us-west-1:*:table/EmergingThreatsLabData",
                  "arn:aws:s3:::emerging-threats-image-bucket",
                  "arn:aws:s3:::emerging-threats-image-bucket/*"
                ]
              }
            ]
          }
        },
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "UploadHandlerLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/smishing-archiving-api-dev-uploadHandler"
              }
            },
            "PrivateUploadHandlerLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/smishing-archiving-api-dev-privateUploadHandler"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "smishing-archiving-api",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/smishing-archiving-api-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/smishing-archiving-api-dev*:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "dynamodb:PutItem",
                            "dynamodb:GetItem",
                            "dynamodb:Scan",
                            "dynamodb:Query",
                            "s3:PutObject",
                            "s3:PutObjectAcl",
                            "s3:GetObject",
                            "s3:ListBucket"
                          ],
                          "Resource": [
                            "arn:aws:dynamodb:us-west-1:*:table/EmergingThreatsLabData",
                            "arn:aws:s3:::emerging-threats-image-bucket",
                            "arn:aws:s3:::emerging-threats-image-bucket/*"
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "smishing-archiving-api",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "UploadHandlerLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-west-1-7b881650-2987",
                  "S3Key": "serverless/smishing-archiving-api/dev/1740444893467-2025-02-25T00:54:53.467Z/smishing-archiving-api.zip"
                },
                "Handler": "backend/functions/publicUploadHandler.uploadImage",
                "Runtime": "nodejs18.x",
                "FunctionName": "smishing-archiving-api-dev-uploadHandler",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "DYNAMODB_TABLE_NAME": "EmergingThreatsLabData",
                    "S3_BUCKET_NAME": "emerging-threats-image-bucket"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "UploadHandlerLogGroup"
              ]
            },
            "PrivateUploadHandlerLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-west-1-7b881650-2987",
                  "S3Key": "serverless/smishing-archiving-api/dev/1740444893467-2025-02-25T00:54:53.467Z/smishing-archiving-api.zip"
                },
                "Handler": "backend/functions/privateUploadHandler.uploadImage",
                "Runtime": "nodejs18.x",
                "FunctionName": "smishing-archiving-api-dev-privateUploadHandler",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "DYNAMODB_TABLE_NAME": "EmergingThreatsLabData",
                    "S3_BUCKET_NAME": "emerging-threats-image-bucket"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "PrivateUploadHandlerLogGroup"
              ]
            },
            "UploadHandlerLambdaVersionmUBRdOrq67pxtYigAohRlvvVqyZwi6m5Ypx0q310": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "UploadHandlerLambdaFunction"
                },
                "CodeSha256": "aDFl1Gpdv251YfQmn7TDX0Jv3FQ+zAcR29JAV5XJPls="
              }
            },
            "PrivateUploadHandlerLambdaVersionfkaEgTy8AYOELEcb4sbRBCSsOuUkoPyOrY6295zeM6I": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "PrivateUploadHandlerLambdaFunction"
                },
                "CodeSha256": "aDFl1Gpdv251YfQmn7TDX0Jv3FQ+zAcR29JAV5XJPls="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "dev-smishing-archiving-api",
                "BinaryMediaTypes": [
                  "multipart/form-data"
                ],
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceUpload": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "upload",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourcePrivateDashupload": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "private-upload",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodUploadOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUpload"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodPrivateDashuploadOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourcePrivateDashupload"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodUploadPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUpload"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "UploadHandlerLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "UploadHandlerLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodPrivateDashuploadPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourcePrivateDashupload"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "PrivateUploadHandlerLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "PrivateUploadHandlerLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayDeployment1740444881720": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "dev"
              },
              "DependsOn": [
                "ApiGatewayMethodUploadOptions",
                "ApiGatewayMethodPrivateDashuploadOptions",
                "ApiGatewayMethodUploadPost",
                "ApiGatewayMethodPrivateDashuploadPost"
              ]
            },
            "ApiGatewayApiKey1": "<REDACTED>",
            "ApiGatewayUsagePlan": {
              "Type": "AWS::ApiGateway::UsagePlan",
              "DependsOn": "ApiGatewayDeployment1740444881720",
              "Properties": {
                "ApiStages": [
                  {
                    "ApiId": {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "Stage": "dev"
                  }
                ],
                "Description": "Usage plan for smishing-archiving-api dev stage",
                "UsagePlanName": "smishing-archiving-api-dev"
              }
            },
            "ApiGatewayUsagePlanKey1": {
              "Type": "AWS::ApiGateway::UsagePlanKey",
              "Properties": {
                "KeyId": {
                  "Ref": "ApiGatewayApiKey1"
                },
                "KeyType": "API_KEY",
                "UsagePlanId": {
                  "Ref": "ApiGatewayUsagePlan"
                }
              }
            },
            "UploadHandlerLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "UploadHandlerLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "PrivateUploadHandlerLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "PrivateUploadHandlerLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "UploadsS3Bucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketName": "emerging-threats-image-bucket",
                "CorsConfiguration": {
                  "CorsRules": [
                    {
                      "AllowedOrigins": [
                        "https://emergingthreats-frontend-bucket.s3.us-west-1.amazonaws.com"
                      ],
                      "AllowedMethods": [
                        "GET",
                        "PUT",
                        "POST"
                      ],
                      "AllowedHeaders": [
                        "*"
                      ]
                    }
                  ]
                }
              }
            },
            "UploadsS3BucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": "emerging-threats-image-bucket",
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "AWS": "arn:aws:iam::688567304941:role/smishing-archiving-api-dev-us-west-1-lambdaRole"
                      },
                      "Action": [
                        "s3:PutObject",
                        "s3:GetObject"
                      ],
                      "Resource": "arn:aws:s3:::emerging-threats-image-bucket/*"
                    }
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-us-west-1-7b881650-2987",
              "Export": {
                "Name": "sls-smishing-archiving-api-dev-ServerlessDeploymentBucketName"
              }
            },
            "UploadHandlerLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "UploadHandlerLambdaVersionmUBRdOrq67pxtYigAohRlvvVqyZwi6m5Ypx0q310"
              },
              "Export": {
                "Name": "sls-smishing-archiving-api-dev-UploadHandlerLambdaFunctionQualifiedArn"
              }
            },
            "PrivateUploadHandlerLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "PrivateUploadHandlerLambdaVersionfkaEgTy8AYOELEcb4sbRBCSsOuUkoPyOrY6295zeM6I"
              },
              "Export": {
                "Name": "sls-smishing-archiving-api-dev-PrivateUploadHandlerLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/dev"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-smishing-archiving-api-dev-ServiceEndpoint"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "uploadHandler": {
          "handler": "backend/functions/publicUploadHandler.uploadImage",
          "events": [
            {
              "http": {
                "path": "upload",
                "method": "post",
                "cors": {
                  "origin": "*",
                  "methods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent",
                    "X-Amzn-Trace-Id"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "private": true,
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "smishing-archiving-api-dev-uploadHandler",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "UploadHandlerLambdaVersionmUBRdOrq67pxtYigAohRlvvVqyZwi6m5Ypx0q310"
        },
        "privateUploadHandler": {
          "handler": "backend/functions/privateUploadHandler.uploadImage",
          "events": [
            {
              "http": {
                "path": "private-upload",
                "method": "post",
                "cors": {
                  "origin": "*",
                  "methods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent",
                    "X-Amzn-Trace-Id"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "smishing-archiving-api-dev-privateUploadHandler",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "PrivateUploadHandlerLambdaVersionfkaEgTy8AYOELEcb4sbRBCSsOuUkoPyOrY6295zeM6I"
        }
      },
      "resources": {
        "Resources": {
          "UploadsS3Bucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "emerging-threats-image-bucket",
              "CorsConfiguration": {
                "CorsRules": [
                  {
                    "AllowedOrigins": [
                      "https://emergingthreats-frontend-bucket.s3.us-west-1.amazonaws.com"
                    ],
                    "AllowedMethods": [
                      "GET",
                      "PUT",
                      "POST"
                    ],
                    "AllowedHeaders": [
                      "*"
                    ]
                  }
                ]
              }
            }
          },
          "UploadsS3BucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": "emerging-threats-image-bucket",
              "PolicyDocument": {
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "AWS": "arn:aws:iam::688567304941:role/smishing-archiving-api-dev-us-west-1-lambdaRole"
                    },
                    "Action": [
                      "s3:PutObject",
                      "s3:GetObject"
                    ],
                    "Resource": "arn:aws:s3:::emerging-threats-image-bucket/*"
                  }
                ]
              }
            }
          }
        },
        "Outputs": {}
      }
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "region": "us-west-1",
      "stage": "dev",
      "environment": {
        "DYNAMODB_TABLE_NAME": "EmergingThreatsLabData",
        "S3_BUCKET_NAME": "emerging-threats-image-bucket"
      },
      "apiGateway": {
        "binaryMediaTypes": [
          "multipart/form-data"
        ],
        "apiKeys": "<REDACTED>"
      },
      "versionFunctions": true,
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:PutItem",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:Query",
                "s3:PutObject",
                "s3:PutObjectAcl",
                "s3:GetObject",
                "s3:ListBucket"
              ],
              "Resource": [
                "arn:aws:dynamodb:us-west-1:*:table/EmergingThreatsLabData",
                "arn:aws:s3:::emerging-threats-image-bucket",
                "arn:aws:s3:::emerging-threats-image-bucket/*"
              ]
            }
          ]
        }
      },
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "UploadHandlerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/smishing-archiving-api-dev-uploadHandler"
            }
          },
          "PrivateUploadHandlerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/smishing-archiving-api-dev-privateUploadHandler"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "smishing-archiving-api",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/smishing-archiving-api-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/smishing-archiving-api-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:PutItem",
                          "dynamodb:GetItem",
                          "dynamodb:Scan",
                          "dynamodb:Query",
                          "s3:PutObject",
                          "s3:PutObjectAcl",
                          "s3:GetObject",
                          "s3:ListBucket"
                        ],
                        "Resource": [
                          "arn:aws:dynamodb:us-west-1:*:table/EmergingThreatsLabData",
                          "arn:aws:s3:::emerging-threats-image-bucket",
                          "arn:aws:s3:::emerging-threats-image-bucket/*"
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "smishing-archiving-api",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "UploadHandlerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-west-1-7b881650-2987",
                "S3Key": "serverless/smishing-archiving-api/dev/1740444893467-2025-02-25T00:54:53.467Z/smishing-archiving-api.zip"
              },
              "Handler": "backend/functions/publicUploadHandler.uploadImage",
              "Runtime": "nodejs18.x",
              "FunctionName": "smishing-archiving-api-dev-uploadHandler",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "DYNAMODB_TABLE_NAME": "EmergingThreatsLabData",
                  "S3_BUCKET_NAME": "emerging-threats-image-bucket"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "UploadHandlerLogGroup"
            ]
          },
          "PrivateUploadHandlerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-west-1-7b881650-2987",
                "S3Key": "serverless/smishing-archiving-api/dev/1740444893467-2025-02-25T00:54:53.467Z/smishing-archiving-api.zip"
              },
              "Handler": "backend/functions/privateUploadHandler.uploadImage",
              "Runtime": "nodejs18.x",
              "FunctionName": "smishing-archiving-api-dev-privateUploadHandler",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "DYNAMODB_TABLE_NAME": "EmergingThreatsLabData",
                  "S3_BUCKET_NAME": "emerging-threats-image-bucket"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "PrivateUploadHandlerLogGroup"
            ]
          },
          "UploadHandlerLambdaVersionmUBRdOrq67pxtYigAohRlvvVqyZwi6m5Ypx0q310": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UploadHandlerLambdaFunction"
              },
              "CodeSha256": "aDFl1Gpdv251YfQmn7TDX0Jv3FQ+zAcR29JAV5XJPls="
            }
          },
          "PrivateUploadHandlerLambdaVersionfkaEgTy8AYOELEcb4sbRBCSsOuUkoPyOrY6295zeM6I": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PrivateUploadHandlerLambdaFunction"
              },
              "CodeSha256": "aDFl1Gpdv251YfQmn7TDX0Jv3FQ+zAcR29JAV5XJPls="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-smishing-archiving-api",
              "BinaryMediaTypes": [
                "multipart/form-data"
              ],
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceUpload": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "upload",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePrivateDashupload": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "private-upload",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodUploadOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceUpload"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodPrivateDashuploadOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourcePrivateDashupload"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodUploadPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUpload"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UploadHandlerLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "UploadHandlerLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodPrivateDashuploadPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePrivateDashupload"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PrivateUploadHandlerLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "PrivateUploadHandlerLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1740444881720": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodUploadOptions",
              "ApiGatewayMethodPrivateDashuploadOptions",
              "ApiGatewayMethodUploadPost",
              "ApiGatewayMethodPrivateDashuploadPost"
            ]
          },
          "ApiGatewayApiKey1": "<REDACTED>",
          "ApiGatewayUsagePlan": {
            "Type": "AWS::ApiGateway::UsagePlan",
            "DependsOn": "ApiGatewayDeployment1740444881720",
            "Properties": {
              "ApiStages": [
                {
                  "ApiId": {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "Stage": "dev"
                }
              ],
              "Description": "Usage plan for smishing-archiving-api dev stage",
              "UsagePlanName": "smishing-archiving-api-dev"
            }
          },
          "ApiGatewayUsagePlanKey1": {
            "Type": "AWS::ApiGateway::UsagePlanKey",
            "Properties": {
              "KeyId": {
                "Ref": "ApiGatewayApiKey1"
              },
              "KeyType": "API_KEY",
              "UsagePlanId": {
                "Ref": "ApiGatewayUsagePlan"
              }
            }
          },
          "UploadHandlerLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UploadHandlerLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PrivateUploadHandlerLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PrivateUploadHandlerLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UploadsS3Bucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "emerging-threats-image-bucket",
              "CorsConfiguration": {
                "CorsRules": [
                  {
                    "AllowedOrigins": [
                      "https://emergingthreats-frontend-bucket.s3.us-west-1.amazonaws.com"
                    ],
                    "AllowedMethods": [
                      "GET",
                      "PUT",
                      "POST"
                    ],
                    "AllowedHeaders": [
                      "*"
                    ]
                  }
                ]
              }
            }
          },
          "UploadsS3BucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": "emerging-threats-image-bucket",
              "PolicyDocument": {
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "AWS": "arn:aws:iam::688567304941:role/smishing-archiving-api-dev-us-west-1-lambdaRole"
                    },
                    "Action": [
                      "s3:PutObject",
                      "s3:GetObject"
                    ],
                    "Resource": "arn:aws:s3:::emerging-threats-image-bucket/*"
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-us-west-1-7b881650-2987",
            "Export": {
              "Name": "sls-smishing-archiving-api-dev-ServerlessDeploymentBucketName"
            }
          },
          "UploadHandlerLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UploadHandlerLambdaVersionmUBRdOrq67pxtYigAohRlvvVqyZwi6m5Ypx0q310"
            },
            "Export": {
              "Name": "sls-smishing-archiving-api-dev-UploadHandlerLambdaFunctionQualifiedArn"
            }
          },
          "PrivateUploadHandlerLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PrivateUploadHandlerLambdaVersionfkaEgTy8AYOELEcb4sbRBCSsOuUkoPyOrY6295zeM6I"
            },
            "Export": {
              "Name": "sls-smishing-archiving-api-dev-PrivateUploadHandlerLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-smishing-archiving-api-dev-ServiceEndpoint"
            }
          }
        }
      },
      "vpc": {}
    },
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "serviceRawFile": "service: smishing-archiving-api\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs18.x\r\n  region: us-west-1\r\n  stage: dev \r\n  environment:\r\n    DYNAMODB_TABLE_NAME: EmergingThreatsLabData\r\n    S3_BUCKET_NAME: emerging-threats-image-bucket\r\n  apiGateway:\r\n    binaryMediaTypes:\r\n      - multipart/form-data\r\n    apiKeys: \r\n      - APIPhishingKey\r\n  versionFunctions: true\r\n  iam:\r\n    role:\r\n      statements:\r\n        - Effect: Allow\r\n          Action:\r\n            - dynamodb:PutItem\r\n            - dynamodb:GetItem\r\n            - dynamodb:Scan\r\n            - dynamodb:Query\r\n            - s3:PutObject\r\n            - s3:PutObjectAcl\r\n            - s3:GetObject\r\n            - s3:ListBucket\r\n          Resource:\r\n            - arn:aws:dynamodb:us-west-1:*:table/EmergingThreatsLabData\r\n            - arn:aws:s3:::emerging-threats-image-bucket\r\n            - arn:aws:s3:::emerging-threats-image-bucket/*\r\n\r\nfunctions:\r\n  uploadHandler:\r\n    handler: backend/functions/publicUploadHandler.uploadImage\r\n    events:\r\n      - http:\r\n          path: upload\r\n          method: post\r\n          cors: true\r\n          private: true\r\n\r\n  privateUploadHandler:\r\n    handler: backend/functions/privateUploadHandler.uploadImage\r\n    events:\r\n      - http:\r\n          path: private-upload\r\n          method: post\r\n          cors: true\r\n\r\nresources:\r\n  Resources:\r\n    # S3 bucket configuration\r\n    UploadsS3Bucket:\r\n      Type: AWS::S3::Bucket\r\n      Properties:\r\n        BucketName: emerging-threats-image-bucket\r\n        CorsConfiguration:\r\n          CorsRules:\r\n            - AllowedOrigins:\r\n                - \"https://emergingthreats-frontend-bucket.s3.us-west-1.amazonaws.com\"\r\n              AllowedMethods:\r\n                - GET\r\n                - PUT\r\n                - POST\r\n              AllowedHeaders:\r\n                - \"*\"\r\n\r\n    UploadsS3BucketPolicy:\r\n      Type: AWS::S3::BucketPolicy\r\n      Properties:\r\n        Bucket: emerging-threats-image-bucket\r\n        PolicyDocument:\r\n          Statement:\r\n            - Effect: Allow\r\n              Principal:\r\n                AWS: arn:aws:iam::688567304941:role/smishing-archiving-api-dev-us-west-1-lambdaRole\r\n              Action:\r\n                - s3:PutObject\r\n                - s3:GetObject\r\n              Resource: \"arn:aws:s3:::emerging-threats-image-bucket/*\"\r\n\r\n    # # The API Key and Usage Plan are managed by Serverless\r\n    # ApiGatewayApiKey:\r\n    #   Type: AWS::ApiGateway::ApiKey  \r\n    #   Properties:\r\n    #     Name: 'APIPhishingKey'\r\n    #     Enabled: true\r\n    #     StageKeys:\r\n    #       - RestApiId: !Ref ApiGatewayRestApi\r\n    #         StageName: dev\r\n\r\n    # ApiGatewayUsagePlan:\r\n    #   Type: AWS::ApiGateway::UsagePlan  \r\n    #   Properties:\r\n    #     UsagePlanName: 'ImageUploadUsagePlan'\r\n    #     ApiStages:\r\n    #       - ApiId: !Ref ApiGatewayRestApi\r\n    #         Stage: dev\r\n    #     Throttle:\r\n    #       BurstLimit: 100\r\n    #       RateLimit: 50\r\n    #     Quota:\r\n    #       Limit: 10000\r\n    #       Period: MONTH\r\n\r\n    # ApiGatewayUsagePlanKey:\r\n    #   Type: AWS::ApiGateway::UsagePlanKey\r\n    #   Properties:\r\n    #     KeyId: !Ref ApiGatewayApiKey\r\n    #     KeyType: API_KEY\r\n    #     UsagePlanId: !Ref ApiGatewayUsagePlan\r\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "orgId": "ab4c854a-9e86-491d-ab7d-8aba02ef9526",
    "orgName": "csusmemergingthreatslab",
    "userId": "RNvwSNRX3DBcdD8pWP",
    "userName": "csusmemergingthreatslab",
    "serviceProviderAwsAccountId": "688567304941",
    "serviceProviderAwsCfStackName": "smishing-archiving-api-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-west-1:688567304941:stack/smishing-archiving-api-dev/cb014b10-f280-11ef-a996-061e779cf741",
    "serviceProviderAwsCfStackCreated": "2025-02-24T07:27:24.835Z",
    "serviceProviderAwsCfStackUpdated": null,
    "serviceProviderAwsCfStackStatus": "CREATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "PrivateUploadHandlerLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-west-1:688567304941:function:smishing-archiving-api-dev-privateUploadHandler:7",
        "Description": "Current Lambda function version",
        "ExportName": "sls-smishing-archiving-api-dev-PrivateUploadHandlerLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "UploadHandlerLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-west-1:688567304941:function:smishing-archiving-api-dev-uploadHandler:22",
        "Description": "Current Lambda function version",
        "ExportName": "sls-smishing-archiving-api-dev-UploadHandlerLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://u35ntvtwm0.execute-api.us-west-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-smishing-archiving-api-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-us-west-1-7b881650-2987",
        "ExportName": "sls-smishing-archiving-api-dev-ServerlessDeploymentBucketName"
      }
    ],
    "compiledCloudFormationTemplate": {
      "AWSTemplateFormatVersion": "2010-09-09",
      "Description": "The AWS CloudFormation template for this Serverless application",
      "Resources": {
        "UploadHandlerLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/smishing-archiving-api-dev-uploadHandler"
          }
        },
        "PrivateUploadHandlerLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/smishing-archiving-api-dev-privateUploadHandler"
          }
        },
        "IamRoleLambdaExecution": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": {
                  "Fn::Join": [
                    "-",
                    [
                      "smishing-archiving-api",
                      "dev",
                      "lambda"
                    ]
                  ]
                },
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogStream",
                        "logs:CreateLogGroup",
                        "logs:TagResource"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/smishing-archiving-api-dev*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:PutLogEvents"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/smishing-archiving-api-dev*:*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "dynamodb:PutItem",
                        "dynamodb:GetItem",
                        "dynamodb:Scan",
                        "dynamodb:Query",
                        "s3:PutObject",
                        "s3:PutObjectAcl",
                        "s3:GetObject",
                        "s3:ListBucket"
                      ],
                      "Resource": [
                        "arn:aws:dynamodb:us-west-1:*:table/EmergingThreatsLabData",
                        "arn:aws:s3:::emerging-threats-image-bucket",
                        "arn:aws:s3:::emerging-threats-image-bucket/*"
                      ]
                    }
                  ]
                }
              }
            ],
            "Path": "/",
            "RoleName": {
              "Fn::Join": [
                "-",
                [
                  "smishing-archiving-api",
                  "dev",
                  {
                    "Ref": "AWS::Region"
                  },
                  "lambdaRole"
                ]
              ]
            }
          }
        },
        "UploadHandlerLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-west-1-7b881650-2987",
              "S3Key": "serverless/smishing-archiving-api/dev/1740444893467-2025-02-25T00:54:53.467Z/smishing-archiving-api.zip"
            },
            "Handler": "backend/functions/publicUploadHandler.uploadImage",
            "Runtime": "nodejs18.x",
            "FunctionName": "smishing-archiving-api-dev-uploadHandler",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "DYNAMODB_TABLE_NAME": "EmergingThreatsLabData",
                "S3_BUCKET_NAME": "emerging-threats-image-bucket"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "UploadHandlerLogGroup"
          ]
        },
        "PrivateUploadHandlerLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-west-1-7b881650-2987",
              "S3Key": "serverless/smishing-archiving-api/dev/1740444893467-2025-02-25T00:54:53.467Z/smishing-archiving-api.zip"
            },
            "Handler": "backend/functions/privateUploadHandler.uploadImage",
            "Runtime": "nodejs18.x",
            "FunctionName": "smishing-archiving-api-dev-privateUploadHandler",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "DYNAMODB_TABLE_NAME": "EmergingThreatsLabData",
                "S3_BUCKET_NAME": "emerging-threats-image-bucket"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "PrivateUploadHandlerLogGroup"
          ]
        },
        "UploadHandlerLambdaVersionmUBRdOrq67pxtYigAohRlvvVqyZwi6m5Ypx0q310": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "UploadHandlerLambdaFunction"
            },
            "CodeSha256": "aDFl1Gpdv251YfQmn7TDX0Jv3FQ+zAcR29JAV5XJPls="
          }
        },
        "PrivateUploadHandlerLambdaVersionfkaEgTy8AYOELEcb4sbRBCSsOuUkoPyOrY6295zeM6I": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "PrivateUploadHandlerLambdaFunction"
            },
            "CodeSha256": "aDFl1Gpdv251YfQmn7TDX0Jv3FQ+zAcR29JAV5XJPls="
          }
        },
        "ApiGatewayRestApi": {
          "Type": "AWS::ApiGateway::RestApi",
          "Properties": {
            "Name": "dev-smishing-archiving-api",
            "BinaryMediaTypes": [
              "multipart/form-data"
            ],
            "EndpointConfiguration": {
              "Types": [
                "EDGE"
              ]
            },
            "Policy": ""
          }
        },
        "ApiGatewayResourceUpload": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "upload",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourcePrivateDashupload": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "private-upload",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodUploadOptions": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizationType": "NONE",
            "HttpMethod": "OPTIONS",
            "MethodResponses": [
              {
                "StatusCode": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": true,
                  "method.response.header.Access-Control-Allow-Headers": true,
                  "method.response.header.Access-Control-Allow-Methods": true
                },
                "ResponseModels": {}
              }
            ],
            "RequestParameters": {},
            "Integration": {
              "Type": "MOCK",
              "RequestTemplates": {
                "application/json": "{statusCode:200}"
              },
              "ContentHandling": "CONVERT_TO_TEXT",
              "IntegrationResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'*'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                  },
                  "ResponseTemplates": {
                    "application/json": ""
                  }
                }
              ]
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourceUpload"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodPrivateDashuploadOptions": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizationType": "NONE",
            "HttpMethod": "OPTIONS",
            "MethodResponses": [
              {
                "StatusCode": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": true,
                  "method.response.header.Access-Control-Allow-Headers": true,
                  "method.response.header.Access-Control-Allow-Methods": true
                },
                "ResponseModels": {}
              }
            ],
            "RequestParameters": {},
            "Integration": {
              "Type": "MOCK",
              "RequestTemplates": {
                "application/json": "{statusCode:200}"
              },
              "ContentHandling": "CONVERT_TO_TEXT",
              "IntegrationResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'*'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                  },
                  "ResponseTemplates": {
                    "application/json": ""
                  }
                }
              ]
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourcePrivateDashupload"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodUploadPost": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "POST",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceUpload"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "UploadHandlerLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "UploadHandlerLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodPrivateDashuploadPost": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "POST",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourcePrivateDashupload"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "PrivateUploadHandlerLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "PrivateUploadHandlerLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayDeployment1740444881720": {
          "Type": "AWS::ApiGateway::Deployment",
          "Properties": {
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "StageName": "dev"
          },
          "DependsOn": [
            "ApiGatewayMethodUploadOptions",
            "ApiGatewayMethodPrivateDashuploadOptions",
            "ApiGatewayMethodUploadPost",
            "ApiGatewayMethodPrivateDashuploadPost"
          ]
        },
        "ApiGatewayApiKey1": "<REDACTED>",
        "ApiGatewayUsagePlan": {
          "Type": "AWS::ApiGateway::UsagePlan",
          "DependsOn": "ApiGatewayDeployment1740444881720",
          "Properties": {
            "ApiStages": [
              {
                "ApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "Stage": "dev"
              }
            ],
            "Description": "Usage plan for smishing-archiving-api dev stage",
            "UsagePlanName": "smishing-archiving-api-dev"
          }
        },
        "ApiGatewayUsagePlanKey1": {
          "Type": "AWS::ApiGateway::UsagePlanKey",
          "Properties": {
            "KeyId": {
              "Ref": "ApiGatewayApiKey1"
            },
            "KeyType": "API_KEY",
            "UsagePlanId": {
              "Ref": "ApiGatewayUsagePlan"
            }
          }
        },
        "UploadHandlerLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "UploadHandlerLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "PrivateUploadHandlerLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "PrivateUploadHandlerLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "UploadsS3Bucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "BucketName": "emerging-threats-image-bucket",
            "CorsConfiguration": {
              "CorsRules": [
                {
                  "AllowedOrigins": [
                    "https://emergingthreats-frontend-bucket.s3.us-west-1.amazonaws.com"
                  ],
                  "AllowedMethods": [
                    "GET",
                    "PUT",
                    "POST"
                  ],
                  "AllowedHeaders": [
                    "*"
                  ]
                }
              ]
            }
          }
        },
        "UploadsS3BucketPolicy": {
          "Type": "AWS::S3::BucketPolicy",
          "Properties": {
            "Bucket": "emerging-threats-image-bucket",
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "AWS": "arn:aws:iam::688567304941:role/smishing-archiving-api-dev-us-west-1-lambdaRole"
                  },
                  "Action": [
                    "s3:PutObject",
                    "s3:GetObject"
                  ],
                  "Resource": "arn:aws:s3:::emerging-threats-image-bucket/*"
                }
              ]
            }
          }
        }
      },
      "Outputs": {
        "ServerlessDeploymentBucketName": {
          "Value": "serverless-framework-deployments-us-west-1-7b881650-2987",
          "Export": {
            "Name": "sls-smishing-archiving-api-dev-ServerlessDeploymentBucketName"
          }
        },
        "UploadHandlerLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "UploadHandlerLambdaVersionmUBRdOrq67pxtYigAohRlvvVqyZwi6m5Ypx0q310"
          },
          "Export": {
            "Name": "sls-smishing-archiving-api-dev-UploadHandlerLambdaFunctionQualifiedArn"
          }
        },
        "PrivateUploadHandlerLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "PrivateUploadHandlerLambdaVersionfkaEgTy8AYOELEcb4sbRBCSsOuUkoPyOrY6295zeM6I"
          },
          "Export": {
            "Name": "sls-smishing-archiving-api-dev-PrivateUploadHandlerLambdaFunctionQualifiedArn"
          }
        },
        "ServiceEndpoint": {
          "Description": "URL of the service endpoint",
          "Value": {
            "Fn::Join": [
              "",
              [
                "https://",
                {
                  "Ref": "ApiGatewayRestApi"
                },
                ".execute-api.",
                {
                  "Ref": "AWS::Region"
                },
                ".",
                {
                  "Ref": "AWS::URLSuffix"
                },
                "/dev"
              ]
            ]
          },
          "Export": {
            "Name": "sls-smishing-archiving-api-dev-ServiceEndpoint"
          }
        }
      }
    }
  }
}